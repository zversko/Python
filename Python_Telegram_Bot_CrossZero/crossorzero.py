import telebot
import config
 
from telebot import types
 
bot = telebot.TeleBot(config.TOKEN)

cell = [' ' for x in range(0,9)]
xorz = 'X'
user_id = ''

def board(cell):
    """
    –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–æ–ª—è
    """
    xorz_board = telebot.types.InlineKeyboardMarkup()
    xorz_board.row( telebot.types.InlineKeyboardButton(f'{cell[0]}', callback_data='0'),
                    telebot.types.InlineKeyboardButton(f'{cell[1]}', callback_data='1'),
                    telebot.types.InlineKeyboardButton(f'{cell[2]}', callback_data='2'))

    xorz_board.row( telebot.types.InlineKeyboardButton(f'{cell[3]}', callback_data='3'),
                    telebot.types.InlineKeyboardButton(f'{cell[4]}', callback_data='4'),
                    telebot.types.InlineKeyboardButton(f'{cell[5]}', callback_data='5'))

    xorz_board.row( telebot.types.InlineKeyboardButton(f'{cell[6]}', callback_data='6'),
                    telebot.types.InlineKeyboardButton(f'{cell[7]}', callback_data='7'),
                    telebot.types.InlineKeyboardButton(f'{cell[8]}', callback_data='8'))

    return xorz_board

def check_winner_or_stalemate(cell):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    :param winner_position: –ù–∞–±–æ—Ä –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    """
    winner_position = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
    for i in winner_position:
        if (cell[i[0]] == cell[i[1]] == cell[i[2]] == 'X') or (cell[i[0]] == cell[i[1]] == cell[i[2]] == 'O'):
            return 1
    count = 1
    for i in cell:
        if cell[i] != ' ':
            count += 1
    return count

@bot.message_handler(commands=['start'])
def welcome(message):
    """
    –ù–∞—á–∞–ª–æ(–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
    """
    sti = open('picture/wellcome.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
 
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ö—Ä–µ—Å—Ç–∏–∫–∏ - –Ω–æ–ª–∏–∫–∏")
 
    markup.add(item1)
 
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def menu_homework(message):
    """
    –û–±–Ω—É–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É, –ø–µ—Ä–≤—ã–π —Ö–æ–¥
    :param cell: –ø–æ–ª–µ
    :param xorz: —Ç–µ–∫—É—â–∏–π —Ö–æ–¥
    """
    global cell, xorz
    cell = [' ' for x in range(0,9)]

    if message.text == '–ö—Ä–µ—Å—Ç–∏–∫–∏ - –Ω–æ–ª–∏–∫–∏':
        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–µ—Ç–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {xorz}', reply_markup=board(cell))
    else:
        bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_func(query):
    """
    –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª, –ø–æ –≤—ã–±–æ—Ä—É –∫–ª–µ—Ç–æ–∫ (—Ü–∏–∫–ª –∑–∞ —Å—á–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
    –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–ª–µ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–æ–µ –ø–æ–ª–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ (check_winner_or_stalemate())
    :param cell: –ø–æ–ª–µ
    :param xorz: —Ç–µ–∫—É—â–∏–π —Ö–æ–¥
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á—Ç–æ–±—ã –Ω–µ —Å–º–æ–≥ —Å—Ö–æ–¥–∏—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    """

    global cell, xorz, user_id
    data = query.data
    data = int(data)

    if user_id == query.from_user.id:
        bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text='–°–µ–π—á–∞—Å –Ω–µ –í–∞—à —Ö–æ–¥', reply_markup=board(cell))

    elif cell[data] == ' ':
    
        user_id = query.from_user.id

        if xorz == 'X':
            xorz_cell = 'X'
            xorz = 'O'
        else:
            xorz_cell = 'O'
            xorz = 'X'

        cell[data] = xorz_cell

        if check_winner_or_stalemate(cell) == 1:
            bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text=f'–í—ã–∏–≥—Ä–∞–ª–∏ {xorz_cell}-–∫–∏')
        elif check_winner_or_stalemate(cell) == 10:
            bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text='–ù–∏—á—å—è')
        else:
            bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text=f'–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {xorz}', reply_markup=board(cell))
    else:
        bot.edit_message_text(chat_id=query.message.chat.id, message_id=query.message.message_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–ª–µ—Ç–∫—É, —ç—Ç–∞ –∫–ª–µ—Ç–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞', reply_markup=board(cell))

bot.polling(none_stop=True)